{"ast":null,"code":"var _jsxFileName = \"/Users/anigokul/Documents/fs-template/fs-template-frontend/src/components/EnterpriseRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnterpriseRegister = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await api.registerEnterprise({\n        username,\n        password\n      });\n      alert('Enterprise registered successfully');\n    } catch (error) {\n      console.error(error);\n      alert('Error registering enterprise');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-10\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"max-w-md mx-auto bg-white p-6 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Register as Enterprise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"w-full p-2 mb-4 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"w-full p-2 mb-4 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-yellow-500 text-white p-2 rounded\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(EnterpriseRegister, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = EnterpriseRegister;\nexport default EnterpriseRegister;\nvar _c;\n$RefreshReg$(_c, \"EnterpriseRegister\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","EnterpriseRegister","_s","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","registerEnterprise","alert","error","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/anigokul/Documents/fs-template/fs-template-frontend/src/components/EnterpriseRegister.js"],"sourcesContent":["import React, { useState } from 'react';\nimport api from '../services/api';\n\nconst EnterpriseRegister = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await api.registerEnterprise({ username, password });\n      alert('Enterprise registered successfully');\n    } catch (error) {\n      console.error(error);\n      alert('Error registering enterprise');\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto mt-10\">\n      <form onSubmit={handleSubmit} className=\"max-w-md mx-auto bg-white p-6 rounded shadow\">\n        <h2 className=\"text-2xl font-bold mb-4\">Register as Enterprise</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          className=\"w-full p-2 mb-4 border rounded\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"w-full p-2 mb-4 border rounded\"\n        />\n        <button type=\"submit\" className=\"w-full bg-yellow-500 text-white p-2 rounded\">Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EnterpriseRegister;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMX,GAAG,CAACY,kBAAkB,CAAC;QAAEP,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACpDM,KAAK,CAAC,oCAAoC,CAAC;IAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBD,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,oBACEX,OAAA;IAAKc,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eACtCf,OAAA;MAAMgB,QAAQ,EAAET,YAAa;MAACO,SAAS,EAAC,8CAA8C;MAAAC,QAAA,gBACpFf,OAAA;QAAIc,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnEpB,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEpB,QAAS;QAChBqB,QAAQ,EAAGhB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC7CT,SAAS,EAAC;MAAgC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFpB,OAAA;QACEqB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAElB,QAAS;QAChBmB,QAAQ,EAAGhB,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC7CT,SAAS,EAAC;MAAgC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFpB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,6CAA6C;QAAAC,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAClB,EAAA,CArCID,kBAAkB;AAAAyB,EAAA,GAAlBzB,kBAAkB;AAuCxB,eAAeA,kBAAkB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}